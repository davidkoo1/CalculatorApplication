<style>
    body {
        font-family: Arial, sans-serif;
        text-align: center;
        background-color: #f2f2f2;
    }

    .calculator {
        display: inline-block;
        border: 2px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        background-color: #f9f9f9;
    }

        .calculator input[type="button"] {
            width: 50px;
            height: 50px;
            font-size: 20px;
            margin: 5px;
            border: 1px solid #ccc;
            outline: none;
            cursor: pointer;
            background-color: #e6e6e6;
        }

            .calculator input[type="button"]:hover {
                background-color: #d9d9d9;
            }

        .calculator input[type="text"] {
            width: 100%;
            height: 50px;
            font-size: 24px;
            margin-bottom: 10px;
            text-align: right;
            padding-right: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            outline: none;
        }

        .calculator input[type="button"].operator {
            background-color: #f2f2f2;
        }

            .calculator input[type="button"].operator:hover {
                background-color: #e5e5e5;
            }

        .calculator input[type="button"].equals {
            background-color: #ff9900;
            color: white;
        }

            .calculator input[type="button"].equals:hover {
                background-color: #e68a00;
            }
</style>

<div class="calculator">
    <input type="text" id="display" readonly>
    <br />
    <input type="button" style="background-color: #c73a3a;" class="operator" value="C" onclick="clearDisplay()">

    <input type="button" value="(" onclick="appendToDisplay('(')">
    <input type="button" value=")" onclick="appendToDisplay(')')">
    <input type="button" class="delete" value="←" onclick="deleteLast()">
    <br />
    <input type="button" value="7" onclick="appendToDisplay('7')">
    <input type="button" value="8" onclick="appendToDisplay('8')">
    <input type="button" value="9" onclick="appendToDisplay('9')">
    <input type="button" class="operator" value="/" onclick="appendToDisplay('/')">
    <br />
    <input type="button" value="4" onclick="appendToDisplay('4')">
    <input type="button" value="5" onclick="appendToDisplay('5')">
    <input type="button" value="6" onclick="appendToDisplay('6')">
    <input type="button" class="operator" value="*" onclick="appendToDisplay('*')">
    <br />
    <input type="button" value="1" onclick="appendToDisplay('1')">
    <input type="button" value="2" onclick="appendToDisplay('2')">
    <input type="button" value="3" onclick="appendToDisplay('3')">
    <input type="button" class="operator" value="-" onclick="appendToDisplay('-')">
    <br />
    <input type="button" value="." onclick="appendToDisplay('.')">
    <input type="button" value="0" onclick="appendToDisplay('0')">
    <input type="button" class="equals" value="=" onclick="calculate()">
    <input type="button" class="operator" value="+" onclick="appendToDisplay('+')">

</div>


<script>
    var needToClearDisplay = false;

    function appendToDisplay(value) {
       

        var currentValue = document.getElementById('display').value;
        var lastChar = currentValue.slice(-1);
        var operators = ['+', '-', '*', '/'];
        var valuesNum = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];
        var lastNumber = currentValue.split(/[\+\-\*\/]/).pop();

        if (needToClearDisplay && valuesNum.includes(value)) {
            clearDisplay();
        }

        if (value === '.') {
            if (currentValue === '') {
                document.getElementById('display').value = '0.';
                return;
            }
        }
        if (
            (lastChar === '-' && value === ')') || 
            (currentValue === '' && operators.includes(value)) || 
            (value !== '-' && (lastChar === '(' && operators.includes(value))) || 
            ((lastChar === '.' && operators.includes(value)) || (value === '.' && operators.includes(lastChar))) || 
            ((lastChar === '.' && value === '(') || (lastChar === '.' && value === ')')) || 
            (lastChar === ')' && valuesNum.includes(value))) {
            return;
        }
        // if (lastChar === '-' && value === ')') {
        //     return;
        // }
        // if (currentValue === '' && operators.includes(value)) {
        //     return;
        // }
        // if (value !== '-' && (lastChar === '(' && operators.includes(value))) {
        //     return;
        // }
        // if ((lastChar === '.' && operators.includes(value)) || (value === '.' && operators.includes(lastChar))) {
        //     return;
        // }
        // if ((lastChar === '.' && value === '(') || (lastChar === '.' && value === ')')) {
        //     return;
        // }

        // Замена последнего оператора на новый, если последний символ - оператор
       // debugger;
        if (operators.includes(lastChar) && operators.includes(value)) {
            if (!valuesNum.includes(currentValue.slice(-2, -1))) { // если преЛаст это () или еще что-то то не меняю знак
                return;
            }
            currentValue = currentValue.slice(0, -1);
        }

        // Предотвращаем добавление точки, если последняя введенная часть является числом с точкой
        if (value === '.' && lastNumber.includes('.')) {
            return;
        }

        // Проверка для скобок
        if (value === '(') {
            // Не позволяем вводить открывающую скобку непосредственно после числа без оператора
            if (lastChar.match(/\d/)) {
                return;
            }
        } else if (value === ')') {
            // Предотвращаем добавление закрывающей скобки, если непосредственно перед ней стоит открывающая или если скобки не сбалансированы
            if (lastChar === '(' || (currentValue.match(/\(/g) || []).length <= (currentValue.match(/\)/g) || []).length) {
                return;
            }
        }

        document.getElementById('display').value = currentValue + value;
        needToClearDisplay = false;
    }

    function clearDisplay() {
        document.getElementById('display').value = '';
    }

    function deleteLast() {
        var currentValue = document.getElementById('display').value;
        document.getElementById('display').value = currentValue.slice(0, -1);
    }

    function calculate() {
        var result = document.getElementById('display').value;
        

        $.ajax({
            url: '/Home/Calculate',
            cache: false,
            type: "POST",
            data: JSON.stringify(result),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if (data.statusCode === 200) {
                    document.getElementById('display').value = data.message;
                    needToClearDisplay = true;
                } else {
                    document.getElementById('display').value = data.message;
                    needToClearDisplay = true;
                }
            },
        });
    }
</script>







